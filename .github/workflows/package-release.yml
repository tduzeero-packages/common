name: Package Release
on:
  push:
    tags: 
      - "v*.*.*-release"
jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [install]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache-project
        with:
          path: |
            ./node_modules/*
            ./dist/*
          key: ${{ github.sha }}.cache-project
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - uses: oven-sh/setup-bun@v2
      - name: Install Project
        run: bun install
      - name: Build Project
        run: bun run build

  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache-project
        with:
          path: |
            ./node_modules/*
            ./dist/*
          key: ${{ github.sha }}.cache-project
      - uses: actions/setup-node@v4
        with:
          scope: '@tduzeero'
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Publish Package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  cleanup:
    name: Clean Up
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: actions/checkout@v4
      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -L 100 | cut -f 1)

          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
            gh actions-cache delete $cacheKey --confirm
          done
          echo "Done!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
